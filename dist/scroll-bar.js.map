{"version":3,"sources":["webpack://lcy-scroll-bar/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack://lcy-scroll-bar/./src/resize-event.js","webpack://lcy-scroll-bar/./src/utils.js","webpack://lcy-scroll-bar/./src/bar.js","webpack://lcy-scroll-bar/./src/main.js","webpack://lcy-scroll-bar/./index.js","webpack://lcy-scroll-bar/webpack/bootstrap","webpack://lcy-scroll-bar/webpack/startup","webpack://lcy-scroll-bar/webpack/runtime/define property getters","webpack://lcy-scroll-bar/webpack/runtime/global","webpack://lcy-scroll-bar/webpack/runtime/hasOwnProperty shorthand","webpack://lcy-scroll-bar/webpack/runtime/make namespace object"],"names":["MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","this","__entries__","Object","defineProperty","prototype","get","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","target","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","width","height","getSVGContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","getHTMLElementContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","isServer","resizeHandler","listeners","__resizeListeners__","fn","BAR_MAP","vertical","offset","scroll","scrollSize","axis","client","direction","horizontal","on","element","event","handler","attachEvent","off","detachEvent","renderThumbStyle","move","bar","style","translate","transform","msTransform","webkitTransform","extend","to","_from","name","Boolean","String","Number","computed","wrap","$parent","render","h","class","clickTrackHandler","ref","clickThumbHandler","methods","e","ctrlKey","button","startDrag","currentTarget","getBoundingClientRect","thumbPositionPercentage","$refs","thumb","$el","stopImmediatePropagation","cursorDown","mouseMoveDocumentHandler","mouseUpDocumentHandler","onselectstart","prevPage","destroyed","components","Bar","native","wrapStyle","wrapClass","viewClass","viewStyle","noresize","tag","type","default","data","sizeWidth","sizeHeight","moveX","moveY","gutter","outer","createElement","className","visibility","body","appendChild","widthNoScroll","offsetWidth","overflow","inner","widthWithScroll","parentNode","removeChild","scrollBarWidth","gutterWith","gutterStyle","Array","isArray","res","i","toObject","marginRight","marginBottom","nodes","view","$slots","handleScroll","scrollTop","scrollLeft","$emit","update","heightPercentage","widthPercentage","scrollHeight","scrollWidth","mounted","$nextTick","resize","__ro__","beforeDestroy","Scrollbar","Vue","component","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","o","g","globalThis","obj","prop","hasOwnProperty","r","Symbol","toStringTag"],"mappings":"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","file":"scroll-bar.js","sourcesContent":["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import ResizeObserver from 'resize-observer-polyfill'\n\nconst isServer = typeof window === 'undefined'\n\n/* istanbul ignore next */\nconst resizeHandler = function(entries) {\n    for (let entry of entries) {\n        const listeners = entry.target.__resizeListeners__ || []\n        if (listeners.length) {\n            listeners.forEach(fn => {\n                fn()\n            })\n        }\n    }\n}\n\n/* istanbul ignore next */\nexport const addResizeListener = function(element, fn) {\n    if (isServer) return\n    if (!element.__resizeListeners__) {\n        element.__resizeListeners__ = []\n        element.__ro__ = new ResizeObserver(resizeHandler)\n        element.__ro__.observe(element)\n    }\n    element.__resizeListeners__.push(fn)\n}\n\n/* istanbul ignore next */\nexport const removeResizeListener = function(element, fn) {\n    if (!element || !element.__resizeListeners__) return\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1)\n    if (!element.__resizeListeners__.length) {\n        element.__ro__.disconnect()\n    }\n}\n","const isServer = typeof window === 'undefined'\n\nexport const BAR_MAP = {\n    vertical: {\n        offset: 'offsetHeight',\n        scroll: 'scrollTop',\n        scrollSize: 'scrollHeight',\n        size: 'height',\n        key: 'vertical',\n        axis: 'Y',\n        client: 'clientY',\n        direction: 'top'\n    },\n    horizontal: {\n        offset: 'offsetWidth',\n        scroll: 'scrollLeft',\n        scrollSize: 'scrollWidth',\n        size: 'width',\n        key: 'horizontal',\n        axis: 'X',\n        client: 'clientX',\n        direction: 'left'\n    }\n}\n\nexport function rafThrottle(fn) {\n    let locked = false\n    return function(...args) {\n        if (locked) return\n        locked = true\n        window.requestAnimationFrame(_ => {\n            fn.apply(this, args)\n            locked = false\n        })\n    }\n}\n\nexport const scrollBarWidth = function() {\n    if (isServer) return 0\n\n    const outer = document.createElement('div')\n    outer.className = 'el-scrollbar__wrap'\n    outer.style.visibility = 'hidden'\n    outer.style.width = '100px'\n    outer.style.position = 'absolute'\n    outer.style.top = '-9999px'\n    document.body.appendChild(outer)\n\n    const widthNoScroll = outer.offsetWidth\n    outer.style.overflow = 'scroll'\n\n    const inner = document.createElement('div')\n    inner.style.width = '100%'\n    outer.appendChild(inner)\n\n    const widthWithScroll = inner.offsetWidth\n    outer.parentNode.removeChild(outer)\n\n    return widthNoScroll - widthWithScroll\n}\n\n/* istanbul ignore next */\nexport const on = (function() {\n    if (!isServer && document.addEventListener) {\n        return function(element, event, handler) {\n            if (element && event && handler) {\n                element.addEventListener(event, handler, false)\n            }\n        }\n    } else {\n        return function(element, event, handler) {\n            if (element && event && handler) {\n                element.attachEvent('on' + event, handler)\n            }\n        }\n    }\n})()\n\n/* istanbul ignore next */\nexport const off = (function() {\n    if (!isServer && document.removeEventListener) {\n        return function(element, event, handler) {\n            if (element && event) {\n                element.removeEventListener(event, handler, false)\n            }\n        }\n    } else {\n        return function(element, event, handler) {\n            if (element && event) {\n                element.detachEvent('on' + event, handler)\n            }\n        }\n    }\n})()\n\nexport function renderThumbStyle({ move, size, bar }) {\n    const style = {}\n    const translate = `translate${bar.axis}(${move}%)`\n\n    style[bar.size] = size\n    style.transform = translate\n    style.msTransform = translate\n    style.webkitTransform = translate\n\n    return style\n}\n\nfunction extend(to, _from) {\n    for (let key in _from) {\n        to[key] = _from[key]\n    }\n    return to\n}\n\nexport function toObject(arr) {\n    var res = {}\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]) {\n            extend(res, arr[i])\n        }\n    }\n    return res\n}\n","import { on, off, renderThumbStyle, BAR_MAP } from './utils'\n\n/* istanbul ignore next */\nexport default {\n    name: 'Bar',\n\n    props: {\n        vertical: Boolean,\n        size: String,\n        move: Number\n    },\n\n    computed: {\n        bar() {\n            return BAR_MAP[this.vertical ? 'vertical' : 'horizontal']\n        },\n\n        wrap() {\n            return this.$parent.wrap\n        }\n    },\n\n    render(h) {\n        const { size, move, bar } = this\n\n        return (\n            <div class={['el-scrollbar__bar', 'is-' + bar.key]} onMousedown={this.clickTrackHandler}>\n                <div ref=\"thumb\" class=\"el-scrollbar__thumb\" onMousedown={this.clickThumbHandler} style={renderThumbStyle({ size, move, bar })}></div>\n            </div>\n        )\n    },\n\n    methods: {\n        clickThumbHandler(e) {\n            // prevent click event of right button\n            if (e.ctrlKey || e.button === 2) {\n                return\n            }\n            this.startDrag(e)\n            this[this.bar.axis] =\n                e.currentTarget[this.bar.offset] - (e[this.bar.client] - e.currentTarget.getBoundingClientRect()[this.bar.direction])\n        },\n\n        clickTrackHandler(e) {\n            const offset = Math.abs(e.target.getBoundingClientRect()[this.bar.direction] - e[this.bar.client])\n            const thumbHalf = this.$refs.thumb[this.bar.offset] / 2\n            const thumbPositionPercentage = ((offset - thumbHalf) * 100) / this.$el[this.bar.offset]\n\n            this.wrap[this.bar.scroll] = (thumbPositionPercentage * this.wrap[this.bar.scrollSize]) / 100\n        },\n\n        startDrag(e) {\n            e.stopImmediatePropagation()\n            this.cursorDown = true\n\n            on(document, 'mousemove', this.mouseMoveDocumentHandler)\n            on(document, 'mouseup', this.mouseUpDocumentHandler)\n            document.onselectstart = () => false\n        },\n\n        mouseMoveDocumentHandler(e) {\n            if (this.cursorDown === false) return\n            const prevPage = this[this.bar.axis]\n\n            if (!prevPage) return\n\n            const offset = (this.$el.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]) * -1\n            const thumbClickPosition = this.$refs.thumb[this.bar.offset] - prevPage\n            const thumbPositionPercentage = ((offset - thumbClickPosition) * 100) / this.$el[this.bar.offset]\n\n            this.wrap[this.bar.scroll] = (thumbPositionPercentage * this.wrap[this.bar.scrollSize]) / 100\n        },\n\n        mouseUpDocumentHandler(e) {\n            this.cursorDown = false\n            this[this.bar.axis] = 0\n            off(document, 'mousemove', this.mouseMoveDocumentHandler)\n            document.onselectstart = null\n        }\n    },\n\n    destroyed() {\n        off(document, 'mouseup', this.mouseUpDocumentHandler)\n    }\n}\n","// reference https://github.com/noeldelgado/gemini-scrollbar/blob/master/index.js\n\nimport { addResizeListener, removeResizeListener } from './resize-event'\nimport { toObject, scrollBarWidth } from './utils'\nimport Bar from './bar'\n\n/* istanbul ignore next */\nexport default {\n    name: 'scrollBar',\n\n    components: { Bar },\n\n    props: {\n        native: Boolean,\n        wrapStyle: {},\n        wrapClass: {},\n        viewClass: {},\n        viewStyle: {},\n        noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能\n        tag: {\n            type: String,\n            default: 'div'\n        }\n    },\n\n    data() {\n        return {\n            sizeWidth: '0',\n            sizeHeight: '0',\n            moveX: 0,\n            moveY: 0\n        }\n    },\n\n    computed: {\n        wrap() {\n            return this.$refs.wrap\n        }\n    },\n\n    render(h) {\n        let gutter = scrollBarWidth()\n        let style = this.wrapStyle\n\n        if (gutter) {\n            const gutterWith = `-${gutter}px`\n            const gutterStyle = `margin-bottom: ${gutterWith}; margin-right: ${gutterWith};`\n\n            if (Array.isArray(this.wrapStyle)) {\n                style = toObject(this.wrapStyle)\n                style.marginRight = style.marginBottom = gutterWith\n            } else if (typeof this.wrapStyle === 'string') {\n                style += gutterStyle\n            } else {\n                style = gutterStyle\n            }\n        }\n        const view = h(\n            this.tag,\n            {\n                class: ['el-scrollbar__view', this.viewClass],\n                style: this.viewStyle,\n                ref: 'resize'\n            },\n            this.$slots.default\n        )\n        const wrap = (\n            <div\n                ref=\"wrap\"\n                style={style}\n                onScroll={this.handleScroll}\n                class={[this.wrapClass, 'el-scrollbar__wrap', gutter ? '' : 'el-scrollbar__wrap--hidden-default']}\n            >\n                {[view]}\n            </div>\n        )\n        let nodes\n\n        if (!this.native) {\n            nodes = [wrap, <Bar move={this.moveX} size={this.sizeWidth}></Bar>, <Bar vertical move={this.moveY} size={this.sizeHeight}></Bar>]\n        } else {\n            nodes = [\n                <div ref=\"wrap\" class={[this.wrapClass, 'el-scrollbar__wrap']} style={style}>\n                    {[view]}\n                </div>\n            ]\n        }\n        return h('div', { class: 'el-scrollbar' }, nodes)\n    },\n\n    methods: {\n        handleScroll() {\n            const wrap = this.wrap\n\n            this.moveY = (wrap.scrollTop * 100) / wrap.clientHeight\n            this.moveX = (wrap.scrollLeft * 100) / wrap.clientWidth\n\n            this.$emit('scroll', this.wrap)\n        },\n\n        update() {\n            let heightPercentage, widthPercentage\n            const wrap = this.wrap\n            if (!wrap) return\n\n            heightPercentage = (wrap.clientHeight * 100) / wrap.scrollHeight\n            widthPercentage = (wrap.clientWidth * 100) / wrap.scrollWidth\n\n            this.sizeHeight = heightPercentage < 100 ? heightPercentage + '%' : ''\n            this.sizeWidth = widthPercentage < 100 ? widthPercentage + '%' : ''\n        }\n    },\n\n    mounted() {\n        if (this.native) return\n        this.$nextTick(this.update)\n        !this.noresize && addResizeListener(this.$refs.resize, this.update)\n    },\n\n    beforeDestroy() {\n        if (this.native) return\n        !this.noresize && removeResizeListener(this.$refs.resize, this.update)\n    }\n}\n","import Scrollbar from './src/main'\n\n/* istanbul ignore next */\nScrollbar.install = function(Vue) {\n    Vue.component(Scrollbar.name, Scrollbar)\n}\n\nexport default Scrollbar\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(839);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}